name: CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      rabbitmq:
        image: rabbitmq:3-management
        ports:
          - 5672:5672
          - 15672:15672
        options: >-
          --health-cmd="rabbitmqctl status"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: admin
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for services to be ready
        run: |
          for attempt in {1..5}; do
            curl -sSf http://localhost:15672 || echo "Retrying RabbitMQ..."
            pg_isready -h localhost -p 5432 -U postgres || echo "Retrying PostgreSQL..."
            sleep 5
          done

      - name: Set DATABASE_URL for tests
        run: echo "DATABASE_URL=postgresql://postgres:admin@localhost:5432/test_db" >> $GITHUB_ENV

      - name: Run tests
        env:
          DATABASE_URL: ${{ env.DATABASE_URL }}
        run: python -m unittest discover -s tests -v

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Deploy to Heroku
        run: |
          echo "$HEROKU_API_KEY" | docker login --username="$HEROKU_USERNAME" --password-stdin registry.heroku.com
          docker build -t registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web .
          docker push registry.heroku.com/${{ secrets.HEROKU_APP_NAME }}/web
          heroku container:release web --app ${{ secrets.HEROKU_APP_NAME }}
